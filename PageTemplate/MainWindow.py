#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 4.22
#  in conjunction with Tcl version 8.6
#    Jul 02, 2019 07:14:05 PM EEST  platform: Windows NT

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import PageTemplate.MainWindow_support as MainWindow_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    MainWindow_support.set_Tk_var()
    top = MainWindow (root)
    MainWindow_support.init(root, top)
    root.mainloop()

w = None
def create_MainWindow(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = tk.Toplevel (root)
    MainWindow_support.set_Tk_var()
    top = MainWindow (w)
    MainWindow_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_MainWindow():
    global w
    w.destroy()
    w = None

class MainWindow:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("724x294+721+811")
        top.title("QuickNote")
        top.configure(background="#c0acef")

        self.Label = ttk.Label(top)
        self.Label.place(relx=0.028, rely=0.238, height=24, width=115)
        self.Label.configure(background="#dad6ff")
        self.Label.configure(foreground="#6a3972")
        self.Label.configure(font="-family {Segoe UI} -size 9 -weight bold")
        self.Label.configure(relief="flat")
        self.Label.configure(text='''Write here''')
        self.Label.configure(width=115)

        self.TagSelector = ttk.Combobox(top)
        self.TagSelector.place(relx=0.711, rely=0.238, relheight=0.088
                , relwidth=0.258)
        self.value_list = ['tag1','tag2','tag3',]
        self.TagSelector.configure(values=self.value_list)
        self.TagSelector.configure(textvariable=MainWindow_support.tag)
        self.TagSelector.configure(takefocus="")

        self.Confirm = tk.Button(top)
        self.Confirm.place(relx=0.028, rely=0.816, height=33, width=686)
        self.Confirm.configure(activebackground="#ececec")
        self.Confirm.configure(activeforeground="#000000")
        self.Confirm.configure(background="#b894ff")
        self.Confirm.configure(borderwidth="0")
        self.Confirm.configure(disabledforeground="#a3a3a3")
        self.Confirm.configure(foreground="#000000")
        self.Confirm.configure(highlightbackground="#d9d9d9")
        self.Confirm.configure(highlightcolor="black")
        self.Confirm.configure(pady="0")
        self.Confirm.configure(text='''Save''')
        self.Confirm.configure(width=686)

        self.InputField = tk.Text(top)
        self.InputField.place(relx=0.028, rely=0.374, relheight=0.388
                , relwidth=0.945)
        self.InputField.configure(background="#dad6ff")
        self.InputField.configure(borderwidth="0")
        self.InputField.configure(cursor="fleur")
        self.InputField.configure(font="-family {Calibri} -size 14")
        self.InputField.configure(foreground="#6a3972")
        self.InputField.configure(highlightbackground="#d9d9d9")
        self.InputField.configure(highlightcolor="#9342c9")
        self.InputField.configure(insertbackground="#f25ae8")
        self.InputField.configure(selectbackground="#c4c4c4")
        self.InputField.configure(selectforeground="black")
        self.InputField.configure(width=684)
        self.InputField.configure(wrap="word")

if __name__ == '__main__':
    vp_start_gui()





